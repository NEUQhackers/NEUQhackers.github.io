<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>2018 HCTF Warmup writeup</title>
      <link href="/2018/11/11/2018hctf/"/>
      <url>/2018/11/11/2018hctf/</url>
      
        <content type="html"><![CDATA[<p>只有做这种签到题才能维持得了生活。<br>进入<a href="http://warmup.2018.hctf.io/" target="_blank" rel="noopener">题目</a>可看到：</p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fx4euyd67rj311s0vudj1.jpg" alt=""></p><p>点进去 <code>hint</code> 可看到：</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fx4exuo9t2j30ug082t8w.jpg" alt=""></p><p>这个url有个很明显的文件包含，推测是文件包含漏洞。然后试了一下下面两个常用的payload：</p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>warmup<span class="token number">.2018</span><span class="token punctuation">.</span>hctf<span class="token punctuation">.</span>io<span class="token regex">/index.php?file=../</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token regex">/../</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token regex">/../</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>ffffllllaaaagggg<span class="token punctuation">.</span>phphttp<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>warmup<span class="token number">.2018</span><span class="token punctuation">.</span>hctf<span class="token punctuation">.</span>io<span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>file<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>filter<span class="token operator">/</span>read<span class="token operator">=</span>convert<span class="token punctuation">.</span>base64<span class="token operator">-</span>encode<span class="token operator">/</span>resource<span class="token operator">=</span>index<span class="token punctuation">.</span>php </code></pre><p>。。。并没有出来什么东西。接着在看首页源代码的时候发现有个 <code>source.php</code> 的注释，我们进去看看：</p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fx4f9ee9woj3118116wg4.jpg" alt=""></p><p>又是艰难的代码审计过程。通过google发现这题是一个<a href="https://www.imuo.com/a/9d619fd76c6a0eca0904d02f06753307d46e2b1dbea245e67840082cc4b157ec" target="_blank" rel="noopener">PhpMyadmin4.81文件包含的CVE</a>，关于此漏洞的解析网上有很多，这里搬运一个：<a href="http://www.lmxspace.com/2018/06/23/phpmyadmin-4-8-1-%E5%A4%8D%E7%8E%B0%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">《phpmyadmin-4.8.1-复现分析》</a><br>直接贴payload吧：</p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>warmup<span class="token number">.2018</span><span class="token punctuation">.</span>hctf<span class="token punctuation">.</span>io<span class="token regex">/index.php?file=source.php%253f/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token regex">/../</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token regex">/../</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>ffffllllaaaagggg</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> CTF,writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>“护网杯”部分题writeup</title>
      <link href="/2018/10/15/huwangbei/"/>
      <url>/2018/10/15/huwangbei/</url>
      
        <content type="html"><![CDATA[<h2 id="迟来的签到题"><a href="#迟来的签到题" class="headerlink" title="迟来的签到题"></a>迟来的签到题</h2><p>描述是“easy xor???”，提示这题需要用异或。<br>下载一个txt文件，打开后里面有一串字符：</p><pre class=" language-javascript"><code class="language-javascript">AAoHAR0nJ1YlUVQnU1BTVCVfUVZRUVUkUCBeUlVWIlBXUiNTXhs<span class="token operator">=</span></code></pre><p>看到后面有“=”号，应该是base64加密。解密后得到异或密文。<br>因为flag格式的最后一个字符为“}”，猜想将密文的最后一个字符与“}”异或就可得到密钥，再用这个密钥异或所有密文就可得到flag。脚本如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> base64str <span class="token operator">=</span> <span class="token string">"AAoHAR0nJ1YlUVQnU1BTVCVfUVZRUVUkUCBeUlVWIlBXUiNTXhs="</span>s <span class="token operator">=</span> base64<span class="token punctuation">.</span><span class="token function">b64decode</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">hex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token string">'}'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    #<span class="token number">0x66</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token string">'}'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    #fres <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    res <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">chr</span><span class="token punctuation">(</span>i<span class="token operator">^</span><span class="token number">0x66</span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span></code></pre><p>得到flag{AA0C72A5652C970773B6F8430D614E58}</p><h2 id="easy-tornado"><a href="#easy-tornado" class="headerlink" title="easy_tornado"></a>easy_tornado</h2><p>进去是这样的：</p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw6vynhepwj30ji0f83z0.jpg" alt=""><br>点开分别看到如下：</p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw6w2ukuoqj307e04ijr6.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw6w36xq08j30ey04amx0.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw6w38vbymj306w03udfm.jpg" alt=""></p><p>第三个flag.txt可以看到有个文件目录，此时的url为：</p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">49.4</span><span class="token punctuation">.</span><span class="token number">95.5</span><span class="token punctuation">:</span><span class="token number">31849</span><span class="token operator">/</span>file<span class="token operator">?</span>filename<span class="token operator">=</span>flag<span class="token punctuation">.</span>txt<span class="token operator">&amp;</span>signature<span class="token operator">=</span>bb6d71b58a9d8c4b0e32e99eee055029</code></pre><p>试着包含这个目录看能不能读取flag出来。构造url为：</p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">49.4</span><span class="token punctuation">.</span><span class="token number">95.5</span><span class="token punctuation">:</span><span class="token number">31849</span><span class="token operator">/</span>file<span class="token operator">?</span>filename<span class="token operator">=</span><span class="token operator">/</span>fllllllllllag<span class="token operator">&amp;</span>signature<span class="token operator">=</span>bb6d71b58a9d8c4b0e32e99eee055029</code></pre><p>结果出现这个：</p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw6w93kycdj30qu08cq36.jpg" alt=""></p><p>说签名错误，意思是得求出正确的signature来。<br>再看hint.txt给的一个提示：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">md5</span><span class="token punctuation">(</span>cookie_secret <span class="token operator">+</span> <span class="token function">md5</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre><p>可能这就是求签名的式子，先求求看。式子中需要用到cookie_secret和filename，filename已经知道是“/fllllllllllag”，那么接下来就需要求cookie_secret。</p><p>我们查看一下tornado这个框架的文档。<br>可以得知tornado框架里的tornado.web组件里有RequestHandler和Application类。<br>找到cookie_secret相关的东西看看。</p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw6xcyd1prj30xq0f4my1.jpg" alt=""></p><p>cookie_secret是self.application.settings的参数。</p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw6xk17fb3j30mu05smx2.jpg" alt=""></p><p>RequestHandler.settings是self.application.settings 的别名。</p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw6xkb0wigj312a05gt8v.jpg" alt=""></p><p>接下来就是来找找如何构造url:</p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw6wqcurl0j31c60ceq4a.jpg" alt=""></p><p>模板可以用两个大括号来构造表达式。<br>再看看模板的一些用法:</p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw6wudcktlj30oo0mgjsm.jpg" alt=""></p><p>handler是RequestHandler的对象。<br>于是我们可以构造表达式:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">{</span><span class="token punctuation">{</span>handler<span class="token punctuation">.</span>settings<span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>构造url：</p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">49.4</span><span class="token punctuation">.</span><span class="token number">95.5</span><span class="token punctuation">:</span><span class="token number">31849</span><span class="token operator">/</span>error<span class="token operator">?</span>msg<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>handler<span class="token punctuation">.</span>settings<span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw6xv3jjppj31gu048mxm.jpg" alt=""></p><p>就可以得到我们的cookie_secret为：</p><pre class=" language-javascript"><code class="language-javascript">I<span class="token punctuation">{</span>k57<span class="token punctuation">.</span>yLAO6<span class="token operator">?</span>sScNFro$<span class="token operator">~</span>l<span class="token operator">!</span>2xX<span class="token operator">-</span>_0n<span class="token operator">&amp;</span>Md@j<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>GZfqYK<span class="token operator">*</span>JDWCtv4P8mpub1#zEU<span class="token operator">^</span></code></pre><p>现在可以把得到的cookie_secret代入式子求签名了。脚本如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> hashlibcookie <span class="token operator">=</span> <span class="token string">"I{k57.yLAO6?sScNFro$~l!2xX-_0n&amp;Md@j)%(GZfqYK*JDWCtv4P8mpub1#zEU^"</span>filename <span class="token operator">=</span> <span class="token string">"/fllllllllllag"</span>#md5 <span class="token punctuation">(</span>cookie_ secret <span class="token operator">+</span> md5 <span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span>temp <span class="token operator">=</span> hashlib<span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hexdigest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>sum <span class="token operator">=</span> cookie <span class="token operator">+</span> tempsign <span class="token operator">=</span> hashlib<span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>sum<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hexdigest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>sign<span class="token punctuation">)</span></code></pre><p>得到签名为b9a067e37b3d90410b4761bd02c95b6e，构造url：</p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">49.4</span><span class="token punctuation">.</span><span class="token number">95.5</span><span class="token punctuation">:</span><span class="token number">31849</span><span class="token operator">/</span>file<span class="token operator">?</span>filename<span class="token operator">=</span><span class="token operator">/</span>fllllllllllag<span class="token operator">&amp;</span>signature<span class="token operator">=</span>297cf619ef0551768aac7fc0dca97838</code></pre><p>可得到flag{0d2443ae8744ceffa67cf1513b293331} </p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF,writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hackergame 2018 我是谁writeip</title>
      <link href="/2018/10/12/whoami/"/>
      <url>/2018/10/12/whoami/</url>
      
        <content type="html"><![CDATA[<p>这一题有两关<br>题目描述<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw5hr20wcfj30w60ian10.jpg" alt=""><br>打开题目<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw5i3urrpzj30ji0o2q4t.jpg" alt=""><br>随便点击Submit提交点东西，都是显示相同的东西。<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw5i4bk23yj30mc06edg8.jpg" alt=""><br>应该是提交得不对，还得找出正确的“我”出来。<br>先看看源码，里头只有一个css，并没有其他东西。又到burpsuite里抓包，并没有找出什么线索。。。接着去网上搜索关于“我是谁”的哲学问题，陷入沉思，怀疑人生。接着无意中在火狐的控制台里看到这么个东西。!<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw5i5mrd87j31ko0byq75.jpg" alt=""><br>I’M A TEAPOT<br>茶壶是什么鬼！！！摸不着头脑，先把TEAPOT给提交了。<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw5i6pg1i2j30w2098wfk.jpg" alt=""><br>得到flag{i_canN0t_BReW_c0ffEE!}和这一题第二关的链接和描述，意思是帮他泡茶。<br>点进去是这样的页面。<br><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fw5i72cl7bj30js04qweu.jpg" alt=""><br>让我们用其他的方式来请求页面。<br>先用burpsuite抓包。<br><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw5i7pxjyzj30si0awq5g.jpg" alt=""><br>看到是用GET的方式来请求页面，改成POST试一试<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw5i80s5stj30sc0co0vk.jpg" alt=""><br>出现了这么两句话</p><pre><code> The method &quot;POST&quot; is deprecated. See RFC-7168 for more information.</code></pre><p>于是我们去找RFC-7168来看看，Google的时候看到维基百科对超文本咖啡壶控制协议的描述（RFC-7168是这个协议的扩展文档）。里面有点内容需要留意。<br><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw5i8xg5cqj31a80lg7bf.jpg" alt=""><br>可以知道BREW这个HTTP请求能泡茶，先抓包修改请求试试。<br><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw5ia64twuj30sg0caq5r.jpg" alt=""></p><pre><code>Please check if there is anything missing in your header.</code></pre><p>提示我们请求头部少了点东西。看看RFC-7168文档先。文档很长，但大概内容是教我们怎么“泡茶”。在The “message/teapot” Media Type这一段中我们可以看到这一句：</p><pre><code>The Content-Type header of a POST or BREW request sent to a TEA-capable pot MUST be &quot;message/teapot&quot; if tea is to be requested.</code></pre><p>意思是如果要请求茶，则要发送的BREW或POST请求的Content-Type头必须是“message / teapot”<br>于是我们在包里添上</p><pre><code>Content-Type: message/teapot</code></pre><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw5ib5zoouj30sc0cm774.jpg" alt=""><br>得到了点新东西</p><pre><code>HTTP/1.0 300 MULTIPLE CHOICESAlternates: {&quot;/the_super_great_hidden_url_for_brewing_tea/black_tea&quot; {type message/teapot}}</code></pre><p>继续回到文档找相应的内容（google翻译后）：<br><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fw5icih2buj30l0088dh8.jpg" alt=""><br><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw5icp36tqj30xg0oc793.jpg" alt=""><br>可以知道我们可以选择black_tea来泡茶，选择的方式就是构造url。于是修改url为</p><pre><code>/the_super_great_hidden_url_for_brewing_tea/black_tea</code></pre><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw5icwhelkj30sa0d4dip.jpg" alt=""><br>就可以得到flag{delivering_tea_to_DaLa0}，真的想给出题dalao递茶，给这脑洞跪了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF,writeup </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
